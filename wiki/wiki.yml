version: "3"
services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wiki
      POSTGRES_PASSWORD: wikijsrocks
      POSTGRES_USER: wikijs
    logging:
      driver: "none"
    networks:
      - traefik-network
    volumes:
      - ./data:/var/lib/postgresql/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.role == manager"
  wiki:
    image: requarks/wiki:2
    depends_on:
      - db
    networks:
      - traefik-network
    volumes:  
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: wikijs
      DB_PASS: wikijsrocks
      DB_NAME: wiki
    ports:
      - "3000:3000"
      - "3443:3443"
    deploy:
      placement:
        constraints:
          - "node.role == manager"
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.wiki.loadbalancer.server.port=3000"
        - "traefik.http.routers.wiki.rule=Host(`wiki.dgital.pro`)"
        - "traefik.http.routers.wiki.entrypoints=web-secured"
        - "traefik.http.routers.wiki.tls.certresolver=mytlschallenge"
#      labels:
#        - traefik.enable=true
#        - traefik.docker.network=traefik-network
#        - traefik.constraint-label=traefik-network
#        - traefik.http.routers.wiki-http.rule=Host(`wiki.dgital.pro`)
#        - traefik.http.routers.wiki-http.entrypoints=web
#      - traefik.http.routers.wiki-http.middlewares=https-redirect
#        - traefik.http.routers.wiki-https.rule=Host(`wiki.dgital.pro`)
#        - traefik.http.routers.wiki-https.entrypoints=web-secured
#        - traefik.http.routers.wiki-https.tls=true
#        - traefik.http.routers.wiki-https.tls.certresolver=mytlschallenge
#        - traefik.http.services.wiki.loadbalancer.server.port=3443
#volumes:
#  db-data:

networks:
  db-network:
    attachable: true
  traefik-network:
    external: true
